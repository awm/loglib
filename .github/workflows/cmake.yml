#
# @file        cmake.yml
# @copyright   2021 Andrew MacIsaac
# @remark
#      SPDX-License-Identifier: BSD-2-Clause
#
# @brief       Standard CMake build workflow for loglib pushes and PRs.
#
name: CMake

# Trigger normal CMake builds for all branches except coverity-scan on push and PR.  The Coverity
# branch has its own build and doesn't need to also run the default CMake one.
on:
  push:
    branches-ignore:
      - coverity-scan
  pull_request:
    branches-ignore:
      - coverity-scan

env:
  # Set CMake build type.
  BUILD_TYPE: Release

# Run the default builds for each platform.
jobs:
  # Default Linux build.
  linux:
    name:     Standard Build (Linux)
    runs-on:  ubuntu-latest
    steps:
      # Install Ninja.
      - name: Install ninja-build tool
        uses: seanmiddleditch/gha-setup-ninja@v3

      # Check out the code.
      - name: Clone ${{ github.repository }}
        uses: actions/checkout@v2
        with:
          path: repo

      # Create build directory.
      - name: Create build environment
        run:  cmake -E make_directory '${{ github.workspace }}/repo/build'

      # Run CMake configuration.
      - name:               Configure CMake
        working-directory:  ${{ github.workspace }}/repo/build
        shell:              bash
        run:                cmake .. -G Ninja -DCMAKE_BUILD_TYPE="${BUILD_TYPE}"

      # Use the Coverity Build Tool to generate a scan result.
      - name:               Build library
        working-directory:  ${{ github.workspace }}/repo/build
        shell:              bash
        run:                cmake --build . --config "${BUILD_TYPE}"

  # Default Windows build.
  mswin:
    name:     Standard Build (Windows)
    runs-on:  windows-latest
    steps:
      # Check out the code.
      - name: Clone ${{ github.repository }}
        uses: actions/checkout@v2
        with:
          path: repo

      # Create build directory.
      - name: Create build environment
        run:  cmake -E make_directory '${{ github.workspace }}/repo/build'

      # Run CMake configuration.
      - name:               Configure CMake
        working-directory:  ${{ github.workspace }}/repo/build
        shell:              bash
        run: |
          cmake .. -G 'Visual Studio 16 2019' -A x64 -DCMAKE_BUILD_TYPE="${BUILD_TYPE}"

      # Use the Coverity Build Tool to generate a scan result.
      - name:               Build library
        working-directory:  ${{ github.workspace }}/repo/build
        shell:              bash
        run:                cmake --build . --config "${BUILD_TYPE}"
