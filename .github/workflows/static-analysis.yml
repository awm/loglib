#
# @file        static-analysis.yml
# @copyright   2021 Andrew MacIsaac
# @remark
#      SPDX-License-Identifier: BSD-2-Clause
#
# @brief       Clang and VS static analysis workflow.
#
name: Static Analysis

# Trigger analysis for all branches except coverity-scan on push and PR.  The Coverity branch has
# its own build and doesn't need to also run this analysis.
on:
  push:
    branches-ignore:
      - coverity-scan
  pull_request:
    branches-ignore:
      - coverity-scan

env:
  # Set CMake build type.
  BUILD_TYPE: Debug

# Run analysis on selected platforms.
jobs:
  # Linux analysis using Clang Static Analyzer.
  analysis-linux:
    name:     Clang Static Analyzer (Linux)
    runs-on:  ubuntu-latest
    steps:
      # Install Ninja.
      - name: Install ninja-build tool
        uses: seanmiddleditch/gha-setup-ninja@v3

      # Check out the code.
      - name: Clone ${{ github.repository }}
        uses: actions/checkout@v2
        with:
          path: repo

      # Create build directory.
      - name: Create build environment
        run:  cmake -E make_directory '${{ github.workspace }}/repo/build'

      # Run CMake configuration.
      - name:               Configure CMake
        working-directory:  ${{ github.workspace }}/repo/build
        shell:              bash
        run: |
          scan-build -o static-analysis cmake .. -G Ninja -DCMAKE_BUILD_TYPE="${BUILD_TYPE}"

      # Build the library.
      - name:               Build library
        working-directory:  ${{ github.workspace }}/repo/build
        shell:              bash
        run:                scan-build -o static-analysis cmake --build . --config "${BUILD_TYPE}"

      # Collect the results.
      - name: Collect analysis results
        uses: actions/upload-artifact@v2
        with:
          name: Clang Static Analysis
          path: ${{ github.workspace }}/repo/build/static-analysis

  # Windows analysis using Visual Studio.
  analysis-mswin:
    name:     Visual Studio Analyzer (Windows)
    runs-on:  windows-latest
    steps:
      # Check out the code.
      - name: Clone ${{ github.repository }}
        uses: actions/checkout@v2
        with:
          path: repo

      # Create build directory.
      - name: Create build environment
        run:  cmake -E make_directory '${{ github.workspace }}/repo/build'

      # Run CMake configuration.
      - name:               Configure CMake
        working-directory:  ${{ github.workspace }}/repo/build
        shell:              bash
        run:                cmake .. -G 'Visual Studio 16 2019' -A x64 -DSTATIC_ANALYSIS=ON

      # Build the library.
      - name:               Build library
        working-directory:  ${{ github.workspace }}/repo/build
        shell:              bash
        run:                cmake --build . --config "${BUILD_TYPE}"

      # Collect the results.
      - name: Collect analysis results
        uses: actions/upload-artifact@v2
        with:
          name: Visual Studio Static Analysis
          path: ${{ github.workspace }}/repo/build/static-analysis.xml
